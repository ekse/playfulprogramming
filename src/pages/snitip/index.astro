---
import * as api from "../../utils/api";
import Document from "../../layouts/document.astro";
import BlogPost from "../../views/blog-post/blog-post.astro";
import { getMarkdownHtml } from "../../utils/markdown";
import { getHrefContainerProps } from "../../utils/href-container-script";
const authors = api.getPeopleByLang("en");
const author = authors[0];
const posts = api.getAllPosts();
const post = posts.find((post) => !post.collection)!;
const postHtml = await getMarkdownHtml(post);

const contents = postHtml.html.split("\n");

const hrefProps = getHrefContainerProps(`#`) as Record<string, string>;

function convertRecordToAttributeString(record: Record<string, string>) {
	let string = "";
	for (const key in record) {
		string += `${key}="${record[key]}" `;
	}
	return string;
}

const ourHTML = `
<p>But did you know that prior to 2015, <span ${convertRecordToAttributeString(hrefProps)} data-snitip="javascript">
<a href="#">JavaScript</a>
<span tabindex="0" role="button" aria-label="More information about JavaScript">â“˜</span>
</span>
didn't even have a class keyword as part of the language?</p>
`.trim();

const firstHalf = contents.slice(0, 5).join("\n");

const secondHalf = contents.slice(5).join("\n");

const newContents = [firstHalf, ourHTML, secondHalf].join("\n");
---

<style>
	:global([data-snitip]) {
		color: var(--primary_default);
		font-weight: bold;
		cursor: pointer;
		text-decoration: none;
	}

	:global([data-snitip] > *:first-child) {
		text-decoration: wavy underline;
	}

	:global([data-snitip] > *:last-child) {
		padding: 0.25rem;
		margin: -0.25rem;
	}

	.snitipHover {
		position: fixed;
		background-color: var(--primary_default);
		color: white;
		padding: 10px;
		border-radius: 5px;
	}
</style>

<script>
	const snitipTriggerEls = Array.from(
		document.querySelectorAll("[data-snitip]"),
	);
	for (let snitipTriggerEl of snitipTriggerEls) {
		let snitip: HTMLElement | null = null;
		snitipTriggerEl.addEventListener("mouseover", () => {
			const snitipName = snitipTriggerEl.getAttribute("data-snitip");
			const snitipTemplate = document.getElementById(
				`${snitipName}-snitip`,
			) as HTMLTemplateElement;
			debugger;
			if (!snitipTemplate) {
				return;
			}
			snitip = snitipTemplate.content.cloneNode(true).firstChild as HTMLElement;
			const snitipTriggerRect = snitipTriggerEl.getBoundingClientRect();
			document.body.appendChild(snitip);
			const snitipRect = snitip.getBoundingClientRect();
			const top = snitipTriggerRect.top + snitipTriggerRect.height;
			const left =
				snitipTriggerRect.left + snitipTriggerRect.width - snitipRect.width / 2;
			snitip.style.top = `${top}px`;
			snitip.style.left = `${left}px`;
		});
		snitipTriggerEl.addEventListener("mouseout", () => {
			if (snitip) {
				document.body.removeChild(snitip);
			}
		});
	}
</script>

<template id="javascript-snitip">
	<div class="snitipHover">
		<h1>Tooltip</h1>
		<p>Hover over the word "JavaScript" to see the snitip.</p>
	</div>
</template>

<Document>
	<BlogPost
		post={post}
		postHtml={newContents}
		postHeadings={postHtml.headingsWithIds}
		authors={[author]}
		collection={undefined}
		collectionPosts={[]}
	/>
</Document>
